services:
  postgres:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d  # Mount init scripts

  back:
    build:
      context: ./taskapp-back
      dockerfile: Dockerfile
    image: taskapp-back:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/taskapp
#      SPRING_DATASOURCE_URL: jdbc:postgresql://rds-prod-taskapp.cvwkycmmmr2u.eu-west-3.rds.amazonaws.com:5432/taskapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_FLYWAY_ENABLED: "true"

      # OAuth2 Configuration
      GOOGLE_CLIENT_ID: 430743706570-rh1rc6gppdshtjbnl136vhgcfu5tvfrk.apps.googleusercontent.com
      GOOGLE_CLIENT_SECRET: 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
      GOOGLE_REDIRECT_URI: http://localhost:8080/taskapp/login/oauth2/code/google

      # Frontend Configuration
      FRONTEND_POPUP_ORIGIN: http://localhost
      FRONTEND_BASE_URL: http://localhost
      BACKEND_BASE_URL: http://localhost:8080
      # JWT Configuration
      JWT_ISSUER: https://auth.taskapp.local
    ports:
      - "8080:8080"
#    depends_on:
#      - postgres
    restart: unless-stopped

#  front:
#    build:
#      context: ./taskapp-front
#      dockerfile: Dockerfile.local
#    image: taskapp-front:lastest
#    ports:
#      - "80:80"
#    depends_on:
#      - back
#    restart: unless-stopped

  front:
    build:
      context: ./taskapp-front
      dockerfile: Dockerfile
    image: taskapp-front:latest
    ports:
      - "80:80"
    depends_on:
      - back
    restart: unless-stopped
    volumes:
      - ./taskapp-front/public/config.json:/usr/share/nginx/html/config.json  # Mount config.json

volumes:
  postgres_data:

#  keycloak:
#    image: quay.io/keycloak/keycloak:26.0
#    command: ["start-dev"]
#    environment:
#      KC_DB: postgres
#      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
#      KC_DB_USERNAME: postgres
#      KC_DB_PASSWORD: postgres
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    ports:
#      - "8081:8080"
#    depends_on:
#      - postgres
#    restart: unless-stopped
#
#  wso2apim:
#    image: wso2/wso2am:latest
#    container_name: wso2apim
#    ports:
#      - "9443:9443"   # Console/Publisher/Dev Portal (HTTPS)
#      - "8243:8243"   # API Gateway (HTTPS)
#      - "8280:8280" #
#    extra_hosts:
#      - "host.docker.internal:host-gateway"  #  APIM call API on host Linux
#    depends_on:
#      - keycloak
#    restart: unless-stopped
