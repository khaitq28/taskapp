name: Frontend CI → Build & Deploy to S3 + CloudFront

on:
  push:
    branches: [ "main" ]
    paths:
      - "taskapp-front/**"
      - ".github/workflows/frontend-ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "taskapp-front/**"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  S3_BUCKET_FRONTEND: taskapp-frontend-prod
  CLOUDFRONT_DISTRIBUTION_ID: EXXXXXX123456

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: taskapp-front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: taskapp-front/package-lock.json

      - name: Install deps
        run: npm ci

      # Nếu frontend cần biến môi trường như API URL → export tại đây
      - name: Build Frontend
        run: |
          npm run build

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::864230187726:role/taskapp-ci-cd   # Role từ Terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync to S3
        run: |
          aws s3 sync ./dist "s3://${{ env.S3_BUCKET_FRONTEND }}" \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "index.html"
          aws s3 cp ./dist/index.html "s3://${{ env.S3_BUCKET_FRONTEND }}/index.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"

#      - name: Invalidate CloudFront
#        run: |
#          aws cloudfront create-invalidation \
#            --distribution-id "${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" \
#            --paths "/*"
