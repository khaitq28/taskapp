name: Backend CI â†’ Build & Push ECR

on:
  push:
    branches: [ "main" ]
    paths:
      - "taskapp-back/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "taskapp-back/**"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  ECR_REGISTRY: 864230187726.dkr.ecr.eu-west-3.amazonaws.com
  ECR_REPOSITORY: taskapp-back-prod

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: taskapp-back
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build & Test (Maven)
        run: mvn -B clean verify

  publish:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (for packaging)
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Package JAR (skip tests)
        working-directory: taskapp-back
        run: mvn -B -DskipTests package

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::864230187726:role/taskapp-ci-cd
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr

      - name: Build & Push Docker image (git SHA tag)
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}
          echo "Building $IMAGE_URI"
          docker build -f taskapp-back/Dockerfile -t "$IMAGE_URI" taskapp-back
          docker push "$IMAGE_URI"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Show pushed image
        run: echo "Pushed $IMAGE_URI"
